# A Dynamic Programming based Python program for LPS problem
# Returns the length of the longest palindromic subsequence in seq
def lps(str):
    n = len(str)

    # Create a table to store results of subproblems
    L = [[0 for x in range(n)] for x in range(n)]

    # Strings of length 1 are palindrome of length 1
    for i in range(n):
        L[i][i] = 1

    # Build the table. Note that the lower diagonal values of table are
    # useless and not filled in the process. The values are filled in a
    # manner similar to Matrix Chain Multiplication DP solution (See
    # http://www.geeksforgeeks.org/dynamic-programming-set-8-matrix-chain-multiplication/
    # cl is length of substring
    for cl in range(2, n + 1):
        for i in range(n - cl + 1):
            j = i + cl - 1
            if str[i] == str[j] and cl == 2:
                L[i][j] = 2
            elif str[i] == str[j]:
                L[i][j] = L[i + 1][j - 1] + 2
            else:
                L[i][j] = max(L[i][j - 1], L[i + 1][j]);

    return L[0][n - 1]


if __name__ == "__main__":
    # Driver program to test above functions
    seq = "0942223471610052173623274071394593650269236430060759666590130421519169425831308408936440226597616819481539584598479005412539179370765803167001419075596848380732487806606361522984611439595084706077458769083051656319315355786856345643254110554824092938640375734174025600649225913371138668106870582977077921017620006238390856876916750398311503837396054441085698504158550428422326267611172087304264969997002016001432809752967860460879941899170242003487911668258685522492279951504444765129842298225004014343619644251050098996489443116992326916023366936812309011008674639457449804399147852956399494999571809871670582303608989462539455374284228057619155892282354221653116622120204048007966079076852703955211103559343942375230731006903270326419610166450262533479169352314706777202939500886091944494100620805908233026086710254562145989005787113190484188798634428895410756344871296449396311017427724723862149720148433505747680446320983518683236097642193903070743442497027664646236454593465967884115744785448444"
    n = len(seq)
    print("The length of the LPS is " + str(lps(seq)))
    print(lps('bbbab'))